[[!meta title="Tools"]]
[[!tag proxy tunnel tools setup connected help]]
#Tools
[[!toc levels=4]]

Tools helpful to the use and management of cjdns.


##HypeDNS

Temprorary DNS service to turn ipv6 addresses into human-readable names.

See [[Hyperboria]].


##Using cjdns through SOCKS5 Proxy

It is possible to run cjdns on a remote host and still utilize the network.  Data can be 'tunneled' and encrypted through an established SSH connection to the machine running cjdns.  Most modern clients support this type of proxy.

###Establish a tunnel

There are multiple ways of establishing a tunnel. Port 9000 can be changed for a port of your chosing, but represents the local port.  cjdns-host is the host running cjdroute.  If you haven't already, now would be a good time to set up your *.ssh/config* file.

* ssh -fND 9000 cjdns-host
	* Recommended
	* Creates socks5://localhost:9000
	* Pushes to background (daemon)

* ssh -D 9000 cjdns-host
	* Creates socks5://localhost:9000
	* Opens shell on cjdns-host

* ssh -f cjdns-host -L 9000:cjdns-host:25 -N
	* Creates proxy for local:9000 -> cjdns-host:25 -> destination
	* Pushes to background (daemon)

* ssh -f -L 9000:specific.cjdns.host:80 cjdns-host -N
	* Creates traffic redirect local:9000 -> cjdns-host -> specific.cjdns.host:80
	* Pushes to background (daemon)


The benefits of the first two options are that you create a 'dynamic' proxy, which allows use of any port, whereas the latter only support forwarding of a single port.  The last option will forward/redirect all traffic over that connection to a specified end-destination.

###Client-specific setup

####Chromium

This setup will allow you to set up a 'new' browser to view websites using cjdns.  Creating a new data directory allows you to separate your cjdns and clearnet browsing.

>> Make sure you have a config/data directory specific to your cjdns browsing

	mkdir ~/.config/chromium/cjdns

>> Run chromium-browser to use above data directory and use your cjdns-tunnel

	chromium-browser --user-data-dir=~/.config/chromium/cjdns --proxy-server=socks5://127.0.0.1:9000

**Notes**

* Pre-pend *http://* to any [[HypeDNS|cjdns-hyperboria]] urls to prevent google from searching for the HypeDNS domain you've entered:
	* **http://mesh.neoretro** vs mesh.neoretro
* Surround ipv6 address with brackets:
	* **[fc93:e5b5:7cde:7983:f50c:fe31:106b:1f88]** vs fc93:e5b5:7cde:7983:f50c:fe31:106b:1f88


##[cjdns-tool](https://github.com/kechagia/cjdns-tool)

A 'small command line tool that queries the cjdns admin interface for information'.  cjdns-tool can be used to do a variety of tasks including pinging other nodes, pinging all other known nodes and looking at your currently known routes.

	$ cjdns-tool help
	Tasks:
	cjdns-tool help [TASK]  # Describe available tasks or one specific task
	cjdns-tool list         # show all known ipv6 addresses of the cjdns network
	cjdns-tool ping         # ping all nodes, generating a list of reachable ips
	cjdns-tool routes       # shows all routes in routing table

**Tips**

* Create a symbolic link from your cjdroute.conf to /etc/cjdroute.conf, since that is where cjdns-tool checks.
* After compiling cjdns-tool, add the *bin/* directory to your $PATH variable in your bash. Be sure to reload your .bashrc/open a new terminal after making the change.

<span style="visibility:hidden;"></span>

	vim ~/.bashrc
	export PATH="$PATH:/path/to/cjdns-tool/bin"

	. ~/.bashrc

More information is available at the [cjdns-tool github README](https://github.com/kechagia/cjdns-tool)
